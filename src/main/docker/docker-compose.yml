version: "3.0"
services:
  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/root/redis
  redis-insight:
    image: redis/redisinsight
    ports:
      - 5540:5540
  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - kafka-net
    ports:
      - 9200:9200
    deploy:
      resources:
        limits:
          memory: 4000M

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.15.1
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - kafka-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.19.0.100:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      kafka-net:
        ipv4_address: 172.19.0.100
    volumes:
      - "kafka_data:/bitnami"

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-connect:
    image: debezium/connect:2.7.3.Final
    container_name: debezium
    restart: always
    ports:
      - 8083:8083
      - 5005:5005
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
    networks:
      - kafka-net

  akhq:
    image: tchiotludo/akhq:0.24.0
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: '172.19.0.100:9092'
              connect:
                - name: "kafka-connect"
                  url: "http://kafka-connect:8083/"
    ports:
      - 8089:8080
    depends_on:
      - kafka
      - kafka-connect
    networks:
      - kafka-net

  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 15122004
      MYSQL_USER: phat
      MYSQL_PASSWORD: 15122004
      # MYSQL_DATABASE: bankingapp
    networks:
      kafka-net:
        ipv4_address: 172.19.0.101
networks:
  kafka-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
          gateway: 172.19.0.1
volumes:
  redis-data:
  zookeeper_data:
  kafka_data:
